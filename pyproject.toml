[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "taskfiles"
dynamic = ["version"]
description = """\
Automation scripts based on invoke library.
"""
readme = "README.md"
requires-python = ">=3.8"
license = "BSD-3-Clause"
keywords = ["Automation"]
authors = [{ name = "Nahuel Defoss√©", email = "D3f0@users.noreply.github.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ["invoke<3.0"]

[tool.hatch.version]
path = "src/taskfiles/__about__.py"


[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "pytest-virtualenv==1.7.0",
  "hunter<4.0",
  # If we can re-distribute a binary, probably the pyz version
  # is not as attractive.
  # "shiv==1.0.3",
  "pdbpp==0.10.3",
  "pyoxidizer==0.24.0",
]

[tool.hatch.envs.default.scripts]
list-dev-tasks = "inv -r tests/ -l"
run-dev-task = "inv -r tests/ {args:run-in-docker}"
test = "pytest {args:.}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]
listwhl = "ls dist/*.whl | sort -r | tail -n1 | xargs unzip -l"
oxy = "hatch build -ct wheel"


[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = ["black>=23.1.0", "mypy>=1.0.0", "ruff>=0.0.243"]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/taskfiles tests}"
style = ["ruff {args:.}", "black --check --diff {args:.}"]
fmt = ["black {args:.}", "ruff --fix {args:.}", "style"]
all = ["style", "typing"]


[tool.hatch.envs.docs]
detached = true
dependencies = ["hatch-mkdocs"]
[tool.hatch.envs.docs.scripts]


[tool.ruff]
target-version = "py38"
line-length = 90
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  # "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105",
  "S106",
  "S107",
  # Ignore complexity
  "C901",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
  "T201",

  # Rules for Invoke tasks
  # Relative imports
  "TID252",
  # Boolean default positional
  "FBT002",
  # Unused argument (for ctx)
  "ARG001",
  # Non mutable structure
  "B006",

  # arg: List[x] = None,
  "RUF013",
  # datetimes w/o tz
  "DTZ005",
  # subprocess calls
  "PLW1510",
  # More subprocess call
  "S603",
  # Default boolean argument
  "FBT001",
  # Inline exception messages
  "EM101",
]
unfixable = [
  # Don't touch unused imports (check if removed in #3)
  # "F401",
]

[tool.ruff.isort]
known-first-party = ["tasks"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

"**/k8s.py" = [
  # Mixed case for kubernetes
  "S108",
  "N815",
  "N806",

]

[tool.coverage.run]
source_pkgs = ["tasks", "tests"]
branch = true
parallel = true
omit = ["src/taskfiles/__about__.py"]

[tool.coverage.paths]
tasks = ["src/taskfiles", "*/tasks/src/taskfiles"]
tests = ["tests", "*/tasks/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]


[tool.ruff.mccabe]
max-complexity = 5


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q -v"
testpaths = ["tests"]
markers = [
  "docker: tests that run inside docker",
  "package: tests that work with packaging",
]


[tool.codespell]
skip = '_plugin,_vendor,dist'
count = ''
quiet-level = 3
